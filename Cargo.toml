[package]
name = "cquisitor-lib"
version = "0.1.0-beta.25"
authors = ["Evgenii Lisitskii <evgeniilisitskii@gmail.com>"]
edition = "2018"
include = [
    "src/**/*",
    "tsconfig.json",
    "Cargo.toml",
    "LICENSE",
    "README.md",
]

[lib]
crate-type = ["cdylib", "rlib"]

[[bin]]
name = "generate_schemas"
path = "src/bin/generate_schemas.rs"

[features]
default = ["console_error_panic_hook"]

[dependencies]

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }
cardano-serialization-lib = { version = "15.0.0-beta.1", features = [] }
schemars = "0.9.0"
serde = "1.0.217"
serde_json = { version = "1.0.136", features = [] }
hex = "0.4.3"
minicbor = { package = "cquisitor-minicbor", version = "0.19.0", features = ["std", "half", "derive"] }
cryptoxide = "0.4.4"
uplc = "1.1.10"
pallas-codec = "0.31.0"
pallas-traverse = "0.31.0"
pallas-primitives = "0.31.0"
pallas-crypto = "0.31.0"
blst = "0.3.13"
anyhow = "1.0.95"
itertools = { version = "0.14.0", features = [] }
bs58 = "0.5.1"
bech32 = "0.11.0"
wasm-bindgen = "0.2.92"
js-sys = "0.3.69"

[target.'cfg(not(all(target_arch = "wasm32", not(target_os = "emscripten"))))'.dependencies]
noop_proc_macro = "0.3.0"


[target.'cfg(all(target_arch = "wasm32", not(target_os = "emscripten")))'.dependencies]
js-sys = "0.3.51"
wasm-bindgen = { version = "0.2.92", features = ["serde-serialize"] }
wasm-bindgen-futures = "0.4.40"
serde-wasm-bindgen = "0.6.5"


[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
